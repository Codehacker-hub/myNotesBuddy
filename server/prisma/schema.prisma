generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  password         String
  username         String?  @unique
  fullname         String?
  description      String?
  profileImage     String?
  isProfileInfoSet Boolean? @default(false)
  createdAt        DateTime @default(now())
  phone            String?  @unique

  // Freelancer-related fields
  isFreelancer     Boolean   @default(false)
  isVerified       Boolean   @default(false)
  verificationDocs String?   // Path or URL to the uploaded verification document
  portfolio        String?   // Portfolio link or file path
  verificationDate DateTime? // When the verification was completed
  isAdminApproved  Boolean   @default(false) // Whether admin approved the freelancer

  // Additional fields for freelancer profile
  language         String[]  @default([])    // Languages known
  qualifications   String[]  @default([])    // Academic or professional qualifications
  hobbies          String[]  @default([])    // Freelancer's hobbies
  skills           String[]  @default([])    // Skills
  dateOfBirth      DateTime? // Date of birth
  gender           String?   // Gender of the user
  experience       Int?      // Experience in years
  interests        String[]  @default([])    // Interests of the freelancer

  // Address fields
  houseNo          String?
  street           String?
  city             String?
  state            String?
  postalCode       String?
  country          String  @default("India") // Default country set to India
  apartment        String?
  landmark         String?
  addressType      String?   // e.g., Residential or Commercial

  // Relationships (optional)
  // Add if you plan to track tasks, projects, or orders associated with freelancers
  // tasks            Task[]   // Example relationship for freelancer tasks
}
